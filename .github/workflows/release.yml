on:
  release:
    types: [created]

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      grd_version: ${{ env.GRD_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.GRD_VERSION == ''
        run: |
          echo "GRD_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.GRD_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GRD_VERSION }}
          release_name: ${{ env.GRD_VERSION }}

  build-release:
    name: Release ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@master
      - uses: arduino/setup-protoc@v1
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --release --manifest-path rust/Cargo.toml

      - name: Build archive
        shell: bash
        run: |
          # TODO: those variables are empty
          # staging="grd-${{ env.GRD_VERSION }}-${{ env.RUNNER_OS }}"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            staging="grd-0.1-windows"
            mkdir -p "$staging"
            cp "rust/target/release/grid-server.exe" "$staging/"
            cp "rust/target/release/grid.dll" "$staging/grd.pyd"
            7z a "$staging.zip" "$staging"
            echo "ASSET=$staging.zip" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            staging="grd-0.1-macos"
            mkdir -p "$staging"
            cp "rust/target/release/grid-server" "$staging/"
            cp "rust/target/release/libgrid.dylib" "$staging/grid.pyd"
            tar czf "$staging.tar.gz" "$staging"
            echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
          else
            staging="grd-0.1-linux"
            mkdir -p "$staging"
            cp "rust/target/release/grid-server" "$staging/"
            cp "rust/target/release/libgrid.so" "$staging/grid.so"
            tar czf "$staging.tar.gz" "$staging"
            echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload release archive
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET }}
