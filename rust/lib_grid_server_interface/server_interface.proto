syntax = "proto3";
package server_interface;

message Job {
  uint64 job_id = 1;
  bytes job_data = 2;
}

message JobQuery {
  uint32 service_id = 1;
  uint32 service_version = 2;
}

message Result {
  uint64 job_id = 1;
  bytes result_data = 2;
}

// =====================================================================================================================

message RegisterClientRequest {
  string host_name = 1;
  string user_name = 2;
  string client_name = 3;
}

message RegisterClientResponse {
  uint32 client_id = 1;
}

// =====================================================================================================================

message JobSubmitRequest {
  uint32 client_id = 1;
  uint32 service_id = 2;
  uint32 service_version = 3;
  bytes job_data = 4;
}

message JobSubmitResponse {
  uint64 job_id = 1;
}

// =====================================================================================================================

message WorkerServerExchangeRequest {
  JobQuery query_job_from_server = 1;
  Result result_from_worker = 2;
}

message WorkerServerExchangeResponse {
  Job job = 1;
}

// =====================================================================================================================

message ResultSubmitRequest {
  Result result = 1;
}

message ResultSubmitResponse {
}

// =====================================================================================================================

message ResultFetchRequest {
  uint32 client_id = 1;
}

message ResultFetchResponse {
  repeated Result results = 1;
}

// =====================================================================================================================

message StatusRequest {
}

message StatusRequestResponse {
  map<string, string> status = 1;
}

// =====================================================================================================================

service Grid {
  rpc RegisterClient (RegisterClientRequest) returns (RegisterClientResponse);
  rpc SubmitJob (JobSubmitRequest) returns (JobSubmitResponse);
  rpc WorkerServerExchange (WorkerServerExchangeRequest) returns (WorkerServerExchangeResponse);
  rpc SubmitResult (ResultSubmitRequest) returns (ResultSubmitResponse);
  rpc FetchResults (ResultFetchRequest) returns (ResultFetchResponse);
  rpc RequestStatus (StatusRequest) returns (StatusRequestResponse);
}